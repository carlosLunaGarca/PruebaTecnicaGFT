# ============================================================================
# GBT Application - AWS Production Configuration
# ============================================================================

# Server Configuration
server.port=8080
server.servlet.context-path=/

# Spring Profiles
spring.profiles.active=aws

# Database Configuration (using Secrets Manager)
spring.data.mongodb.uri=${SPRING_DATA_MONGODB_URI:mongodb://localhost:27017/gbt}
spring.data.mongodb.auto-index-creation=true

# Security Configuration (using Secrets Manager)
app.security.client.username=${CLIENT_USERNAME:client}
app.security.client.password=${CLIENT_PASSWORD:client123}
app.security.admin.username=${ADMIN_USERNAME:admin}
app.security.admin.password=${ADMIN_PASSWORD:admin123}

# Logging Configuration
logging.level.org.gft.gbt=INFO
logging.level.org.springframework.security=WARN
logging.level.org.springframework.web=INFO
logging.level.org.springframework.data.mongodb=WARN
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.endpoint.health.roles=ADMIN
management.endpoint.info.enabled=true
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.metrics.export.prometheus.enabled=true

# Health Check Configuration
management.health.db.enabled=true
management.health.diskspace.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

# Application Information
info.app.name=GBT - Gestión de Fondos BTG Pactual
info.app.description=Plataforma backend para gestión autónoma de fondos de inversión
info.app.version=@project.version@
info.app.environment=aws-production

# Performance Tuning
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.data.mongodb.field-naming-strategy=org.springframework.data.mapping.model.SnakeCaseFieldNamingStrategy

# Connection Pool Configuration
spring.data.mongodb.option.max-connection-per-host=20
spring.data.mongodb.option.min-connection-per-host=5
spring.data.mongodb.option.max-connection-idle-time=60000
spring.data.mongodb.option.max-connection-life-time=120000
spring.data.mongodb.option.connect-timeout=10000
spring.data.mongodb.option.socket-timeout=5000

# Error Handling
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false
server.error.include-stacktrace=never
server.error.include-message=always

# CORS Configuration (restrictive for production)
app.cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000}
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=*
app.cors.allow-credentials=true

# Rate Limiting (if implemented)
app.rate-limit.enabled=true
app.rate-limit.requests-per-minute=100
app.rate-limit.requests-per-hour=1000

# Notification Configuration
app.notification.email.enabled=true
app.notification.sms.enabled=true
app.notification.async=true

# Cache Configuration
spring.cache.type=simple
spring.cache.cache-names=funds,customers
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=10m
