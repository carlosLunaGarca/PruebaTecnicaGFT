

version: '3.8'

services:
  # MongoDB Service
  mongo:
    image: mongo:7
    container_name: mongo
    command: ["--replSet", "rs0", "--bind_ip_all"]
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "mongosh --eval 'db.adminCommand({ ping: 1 })' || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 30
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123

  # Initialize Replica Set
  mongo-rs-init:
    image: mongo:7
    container_name: mongo-rs-init
    depends_on:
      mongo:
        condition: service_healthy
    entrypoint: >
      bash -lc "
      mongosh --host mongo:27017 --eval '
        try { rs.initiate({_id:\"rs0\", members:[{_id:0, host:\"mongo:27017\"}]}); } catch(e) { print(e); }
        rs.status();
      '
      "
    restart: "no"

  # MongoDB Web UI
  mongo-express:
    image: mongo-express:1.0.2
    container_name: mongo-express
    depends_on:
      mongo:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin123
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    restart: unless-stopped

  # Spring Boot Application
  gbt-application:
    build:
      context: .
      dockerfile: Dockerfile.local
    container_name: gbt-application
    depends_on:
      mongo:
        condition: service_healthy
      mongo-rs-init:
        condition: service_completed_successfully
    ports:
      - "8080:8080"
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://admin:admin123@mongo:27017/gbt?authSource=admin&replicaSet=rs0
      APP_SECURITY_CLIENT_USERNAME: client
      APP_SECURITY_CLIENT_PASSWORD: client123
      APP_SECURITY_ADMIN_USERNAME: admin
      APP_SECURITY_ADMIN_PASSWORD: admin123
    restart: unless-stopped

volumes:
  mongo_data:
